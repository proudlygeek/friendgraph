
<div class="span12">
  <div id="sigma" class="sigma-expanded">
  </div>
</div>

<% content_for :javascripts do %>
  <script type="text/javascript">

    function init() {
      // Instanciate sigma.js and customize rendering :
      var sigInst = sigma.init(document.getElementById('sigma')).drawingProperties({
        defaultLabelColor: '#fff',
        defaultLabelSize: 9,
        // defaultEdgeColor: 'green',
        // defaultNodeColor: 'green',
        defaultLabelBGColor: '#787878',
        defaultLabelHoverColor: 'red',
        defaultLabelFontSize: '6px', 
        labelThreshold: 6,
        defaultEdgeType: 'curve'
      }).graphProperties({
        minNodeSize: 3,
        maxNodeSize: 3,
        minEdgeSize: 1.8,
        maxEdgeSize: 1.8
      }).mouseProperties({
        maxRatio: 32
      });
     
      // Parse a GEXF encoded file to fill the graph
      // (requires "sigma.parseGexf.js" to be included)
      sigInst.parseGexf('/facebook/friendlist.gexf');
     
// Bind events :
  var greyColor = '#787878';
  var blackColor = '#000';
  sigInst.bind('overnodes',function(event){
    var nodes = event.content;
    var neighbors = {};
    sigInst.iterEdges(function(e){
      if(nodes.indexOf(e.source)<0 && nodes.indexOf(e.target)<0){
        if(!e.attr['grey']){
          e.attr['true_color'] = e.color;
          e.color = greyColor;
          e.attr['grey'] = 1;
        }
      }else{
        e.color = e.attr['grey'] ? e.attr['true_color'] : e.color;
        e.attr['grey'] = 0;
 
        neighbors[e.source] = 1;
        neighbors[e.target] = 1;
      }
    });

    sigInst.iterNodes(function(n){
      if(!neighbors[n.id]){
        if(!n.attr['grey']){
          n.attr['true_color'] = n.color;
          n.color = blackColor;
          n.attr['grey'] = 1;
        }
      }else{
        n.color = n.attr['grey'] ? n.attr['true_color'] : n.color;
        n.attr['grey'] = 0;
        n.forceLabel = true;
      }
    }).draw(2,2,2);

  }).bind('outnodes',function(){
    sigInst.iterEdges(function(e){
      e.color = e.attr['grey'] ? e.attr['true_color'] : e.color;
      e.attr['grey'] = 0;
    }).iterNodes(function(n){
      n.color = n.attr['grey'] ? n.attr['true_color'] : n.color;
      n.attr['grey'] = 0;
      n.forceLabel = false;
    }).draw(2,2,2);
  });



      // Draw the graph :
      sigInst.draw();
      
      $('.wait').fadeOut();
    }
    // if (document.addEventListener) {
    //   document.addEventListener("DOMContentLoaded", init, false);
    // } else {
    //   window.onload = init;
    // }

  </script>
<% end %>
